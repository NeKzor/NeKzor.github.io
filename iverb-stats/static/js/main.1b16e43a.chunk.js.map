{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","views/DemoView.js","components/SimpleTitle.js","views/NotFoundView.js","utils/stableSort.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","components/RecordsChart.js","components/FloatingActionButton.js","Api.js","views/RecordsView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","initialState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","Padding","style","paddingTop","AboutView","useContext","AppState","dispatch","Paper","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","rel","href","Alert","props","elevation","defaultReplay","info","DemoView","isMounted","useTheme","replay","setReplay","errorMessage","setErrorMessage","handleClose","_","reason","parseReplay","useCallback","file","reader","FileReader","onload","result","target","window","Buffer","SourceDemoParser","Speedrun","parser","speedrunTimer","SourceTimer","sarTimer","SarTimer","demo","parse","from","detectGame","adjustTicks","adjustRange","playbackTicks","ipt","getIntervalPerTick","playbackTime","speedrun","time","sar","removeData","obj","Object","keys","forEach","_view","err","message","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","querySelector","addEventListener","removeEventListener","Button","disableElevation","click","type","id","display","onDrop","preventDefault","i","length","kind","push","getAsFile","onDragOver","name","fontSize","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","data","gutterBottom","NotFoundView","SimpleTitle","cmpOptions","numeric","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","localeCompare","cmp","el","sort","path","indexOf","split","s","reduce","acc","val","rows","sortable","align","id2","RankingsTableHead","onRequestSort","TableHead","TableRow","TableCell","sortDirection","Tooltip","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","overflowX","avatar","height","defaultState","thenBy","rowsPerPage","noWrap","whiteSpace","minifiedStyle","MinTableCell","RecordsTable","setState","Table","size","newOrderBy","newThenBy","TableBody","bb","stableSortSort","slice","user","alignItems","Avatar","wrs","duration","formatScore","score","csec","tsec","Math","floor","sec","min","hourScale","scaleLinear","domain","range","getDateDifferenceColor","date","passedHours","moment","diff","RecordsTableHead","idx","colSpan","property","useRowStyles","borderBottom","RecordsHistoryRow","wr","delta","fromNow","format","media","RecordsRow","useLiveDuration","history","onClickHistory","isFirst","rowSpan","records","unit","isLast","Collapse","in","timeout","unmountOnExit","Box","margin","aria-label","historyWr","stats","setHistory","totalTime","humanize","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","plotOptions","pie","donut","value","total","fab","top","right","bottom","left","jumpToTop","smoothScroll","y","documentElement","scrollTop","requestAnimationFrame","scrollTo","FloatingActionButton","onScroll","clearTimeout","setTimeout","scrollX","scrollY","useScroll","Zoom","Fab","baseApi","route","fetch","res","console","log","url","status","ok","json","padTop","match","game","setGame","tab","setTab","params","Api","request","campaigns","campaign","maps","wrDate","bestTimeId","alias","leaderboard","entry","r","LinearProgress","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","p","justify","alignContent","RankingsTable","views","marginTop","App","useReducer","createMuiTheme","light","blue","dark","secondary","orange","error","red","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","RecordsView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b16e43a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n\nexport const useScroll = () => {\n    const timeout = React.useRef(undefined);\n    const [state, setState] = React.useState({ x: 0, y: 0 });\n\n    const onScroll = React.useCallback(() => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => {\n            setState({ x: window.scrollX, y: window.scrollY });\n        }, 100);\n    }, [setState]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            clearTimeout(timeout.current);\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [onScroll]);\n\n    return state;\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'iverb-stats', link: '/', inDrawer: false },\n    { title: 'Records', link: '/records', inDrawer: true, default: true },\n    { title: 'Community', link: '/community', inDrawer: true, default: true },\n    { title: 'Demo Inspection', link: '/demo', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"iverb-stats\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/demo'}>\n                        <ListItemText primary={'Demo Inspection'} />\n                    </ListItem>\n                    <ListItem button key={1} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            iverb-stats\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\n/* import moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress'; */\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\n/* import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip'; */\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\n/* import { useIsMounted } from '../Hooks'; */\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\n/* const branches = [\n    { repo: 'NeKzor/iverb-stats', branch: 'master' },\n    { repo: 'NeKzBot/iverb-stats', branch: 'api' },\n    { repo: 'NeKzor/iverb-stats', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />; */\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\n/* const getUpdate = () => {\n    const now = moment.utc();\n    let updateIn = moment().utc().endOf('day');\n\n    if (updateIn.isBefore(now)) {\n        updateIn = moment().utc().endOf('day').add(1, 'day');\n    }\n\n    const duration = moment.duration({ from: now, to: updateIn });\n    const hours = duration.get('hours');\n    const minutes = duration.get('minutes');\n    const seconds = duration.get('seconds');\n\n    const g = (value) => (value === 1 ? '' : 's');\n    return `${hours} hour${g(hours)}, ${minutes} minute${g(minutes)}, ${seconds} second${g(seconds)}`;\n};\n\nlet clockTimer = null; */\n\nconst AboutView = () => {\n    /* const isMounted = useIsMounted(); */\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    /* const [gitHub, setGitHub] = React.useState([]);\n    const [nextUpdate, setNextUpdate] = React.useState(getUpdate());\n\n    React.useEffect(() => {\n        clockTimer = setInterval(() => {\n            setNextUpdate(getUpdate());\n        }, 1000);\n\n        return () => clearInterval(clockTimer);\n    }, []); */\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    /* React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]); */\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Portal 2 World Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">aka iverb 1½</Typography>\n\n                {/* <Padding />\n\n                <Typography variant=\"h5\">Next Update</Typography>\n                <br />\n                {nextUpdate} */}\n\n                {/* <Padding />\n\n                <Typography variant=\"h5\">Changelog</Typography>\n                <br />\n\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )} */}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"https://board.iverb.me\">\n                    board.iverb.me\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://github.com/NeKzor/sdp.js\">\n                    sdp.js\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\n/* import Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; */\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop demo here :)',\n};\n\nconst DemoView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    /* const [parseGhost, setParseGhost] = React.useState(true); */\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    /* const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    }; */\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, SourceDemoParser, Speedrun } = window;\n\n                    const parser = SourceDemoParser.default();\n                    const speedrunTimer = Speedrun.SourceTimer.default();\n                    const sarTimer = Speedrun.SarTimer.default();\n\n                    const demo = (window.demo = parser.parse(Buffer.from(result)));\n\n                    // Fix message ticks\n                    demo.detectGame().adjustTicks();\n\n                    // Fix header\n                    demo.adjustRange();\n\n                    // Adjust 0-tick demos manually\n                    if (demo.playbackTicks === 0) {\n                        let ipt = demo.getIntervalPerTick();\n                        demo.playbackTicks = 1;\n                        demo.playbackTime = ipt;\n                    } else {\n                        // Speedrun rules apply here\n                        demo.speedrun = speedrunTimer.time(demo);\n\n                        // Check SAR support\n                        demo.sar = sarTimer.time(demo);\n                    }\n\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    removeData(demo);\n                    setReplay(demo);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, /* parseGhost, */ setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        document.querySelector('#file').addEventListener('change', handleChange);\n        return () => document.querySelector('#file').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    const openFile = () => {\n        document.querySelector('#file').click();\n    };\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" id=\"file\" style={{ display: 'none' }} />\n                {/* <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                /> */}\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"demo\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default DemoView;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","const cmpOptions = { numeric: true };\n\nexport const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    if (orderBy === thenBy) {\n        return stableSort(array, order, orderBy);\n    }\n\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        let cmp = bb.localeCompare(aa, undefined, cmpOptions);\n        if (cmp !== 0) return cmp;\n        aa = getPropFast(a, thenBy).toString();\n        bb = getPropFast(b, thenBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path];\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n    avatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        marginRight: 10,\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Grid container direction=\"row\" alignItems=\"center\">\n                                        <Avatar className={classes.avatar} src={row.user.avatar} />\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={'https://board.iverb.me/profile/' + row.user.id}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {row.user.name}\n                                        </Link>\n                                    </Grid>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score) {\n    if (score === undefined || score === null) {\n        return score;\n    }\n\n    let csec = score % 100;\n    let tsec = Math.floor(score / 100);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec);\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    const passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n\nconst minuteScale = scaleLinear()\n    .domain([0, 8 * 60, 16 * 60, 24 * 60])\n    .range(['#2eb82e', '#cca300', '#e67300', '#e63200']);\n\nexport function getDateTimeDifferenceColor(pastMinutes) {\n    return pastMinutes >= 0 && pastMinutes <= 24 * 60 ? minuteScale(pastMinutes) : undefined;\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { stableSort } from '../utils/stableSort';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'map.name', sortable: true, label: 'Chamber', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'id', sortable: false, label: '', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'map.index',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst useRowStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n    avatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        marginRight: 10,\n    },\n}));\n\nconst RecordsHistoryRow = ({ wr }) => {\n    const score = formatScore(wr.score);\n    const delta = wr.delta !== null ? formatScore(wr.delta) : null;\n\n    return (\n        <TableRow tabIndex={-1}>\n            <MinTableCell align=\"left\">\n                <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                    <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                        {wr.date}\n                    </Moment>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">{score}</MinTableCell>\n            <MinTableCell align=\"left\">{delta ? '-' + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Link\n                    color=\"inherit\"\n                    href={`https://board.iverb.me/profile/${wr.user.id}`}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                >\n                    {wr.user.name}\n                </Link>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                {wr.demo && (\n                    <Tooltip title=\"Download Demo\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={'https://board.iverb.me/getDemo?id=' + wr.id}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                )}\n                {wr.media && (\n                    <Tooltip title=\"Watch on YouTube\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={{ ...noWrap, marginLeft: !wr.demo ? 24 : undefined }}\n                            color=\"inherit\"\n                            href={'https://youtu.be/' + wr.media}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <YouTubeIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                )}\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ wr, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score);\n    const delta = wr.delta !== null ? formatScore(wr.delta) : null;\n\n    const classes = useRowStyles();\n\n    const open = history === wr.map.id;\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {(wr.map.isFirst || (orderBy !== 'map.name' && orderBy !== 'map.index')) && (\n                    <MinTableCell\n                        style={noWrap}\n                        rowSpan={orderBy === 'map.name' || orderBy === 'map.index' ? wr.map.records : 1}\n                        align=\"left\"\n                    >\n                        <Link\n                            color=\"inherit\"\n                            href={`https://board.iverb.me/chamber/${wr.map.id}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.map.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                {(wr.map.isFirst || (orderBy !== 'map.name' && orderBy !== 'map.index')) && (\n                    <MinTableCell\n                        rowSpan={orderBy === 'map.name' || orderBy === 'map.index' ? wr.map.records : 1}\n                        align=\"left\"\n                    >\n                        {delta && (\n                            <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                                <span>{score}</span>\n                            </Tooltip>\n                        )}\n                        {!delta && <span>{score}</span>}\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Avatar className={classes.avatar} src={wr.user.avatar} />\n                        <Link\n                            color=\"inherit\"\n                            href={`https://board.iverb.me/profile/${wr.user.id}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.user.name}\n                        </Link>\n                    </Grid>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                        {useLiveDuration ? (\n                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                        ) : (\n                            <span>{wr.duration}</span>\n                        )}\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    {wr.demo && (\n                        <Tooltip title=\"Download Demo\" placement=\"bottom\" enterDelay={300}>\n                            <IconButton\n                                size=\"small\"\n                                style={noWrap}\n                                color=\"inherit\"\n                                href={'https://board.iverb.me/getDemo?id=' + wr.id}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <SaveAltIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {wr.media && (\n                        <Tooltip title=\"Watch on YouTube\" placement=\"bottom\" enterDelay={300}>\n                            <IconButton\n                                size=\"small\"\n                                style={{ ...noWrap, marginLeft: !wr.demo ? 24 : undefined }}\n                                color=\"inherit\"\n                                href={'https://youtu.be/' + wr.media}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <YouTubeIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {wr.map.isLast && wr.map.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={{ ...noWrap, marginLeft: !wr.demo && !wr.media ? 48 : !wr.media ? 24 : undefined }}\n                            onClick={() => onClickHistory(wr.map.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.map.isLast && wr.map.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>Date</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>Timesave</MinTableCell>\n                                            <MinTableCell colSpan={2}>Player</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.map.history.map((historyWr, idx) => {\n                                            return <RecordsHistoryRow wr={historyWr} key={idx} />;\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ data, stats, useLiveDuration }) => {\n    const [{ order, rowsPerPage, orderBy, page }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy ? 'asc' : state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: state.orderBy === newOrderBy && state.order === 'asc' ? 'map.index' : newOrderBy,\n        }));\n    };\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={5}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst RecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useScroll } from '../Hooks';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n}));\n\nconst jumpToTop = () => {\n    const smoothScroll = () => {\n        const y = document.documentElement.scrollTop;\n        if (y > 0) {\n            window.requestAnimationFrame(smoothScroll);\n            window.scrollTo(0, y - y / 5);\n        }\n    };\n    smoothScroll();\n};\n\nconst FloatingActionButton = () => {\n    const { y } = useScroll();\n    const classes = useStyles();\n\n    return (\n        <Zoom in={y !== 0} timeout={1000}>\n            <Fab title=\"Jump to top\" color=\"secondary\" className={classes.fab} onClick={jumpToTop}>\n                <KeyboardArrowUpIcon />\n            </Fab>\n        </Zoom>\n    );\n};\n\nexport default FloatingActionButton;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8080'\n                : 'https://raw.githubusercontent.com/NeKzor/nekzor.github.io/master/iverb-stats';\n    }\n    async request(route, date) {\n        let res = await fetch(`${this.baseApi}/${route}/${date || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n        return res.ok ? await res.json() : [];\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\nimport SimpleTitle from '../components/SimpleTitle';\n//import OverallTable from '../components/OverallTable';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst RecordsView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            const game = (await Api.request('records', date)).campaigns;\n\n            for (const campaign of game) {\n                const rows = [];\n\n                let index = 0;\n                for (const { map, wrs, history } of campaign.maps) {\n                    for (const wr of wrs) {\n                        const wrDate = moment(wr.date);\n                        const duration = useLiveDuration ? moment().diff(wrDate, 'd') : wr.duration;\n\n                        rows.push({\n                            map: {\n                                id: map.bestTimeId,\n                                name: map.alias,\n                                isFirst: wr === wrs[0],\n                                isLast: wr === wrs[wrs.length - 1],\n                                records: wrs.length,\n                                history,\n                                index,\n                            },\n                            ...wr,\n                            duration,\n                        });\n                    }\n\n                    ++index;\n                }\n\n                campaign.maps = rows;\n\n                if (useLiveDuration) {\n                    campaign.stats.leaderboard.forEach((entry, idx) => {\n                        campaign.stats.leaderboard[idx].duration = campaign.maps\n                            .filter((r) => r.user.id === entry.user.id)\n                            .map((r) => r.duration)\n                            .reduce((a, b) => a + b, 0);\n                    });\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <RecordsTable\n                                            data={game[tab].maps}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable\n                                                    data={game[tab].stats.leaderboard}\n                                                    useLiveDuration={useLiveDuration}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].stats.leaderboard.map(\n                                                                (row) => row.user.name,\n                                                            )}\n                                                            series={game[tab].stats.leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}></Grid>\n                                                </Grid>\n                                            </Grid>\n                                            {/* <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                                                    Overall Rankings\n                                                </Typography>\n                                                <br></br>\n                                                <OverallTable data={[]} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6}></Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(RecordsView);\n","import React from 'react';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blue, orange, red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport DemoView from './views/DemoView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\nimport RecordsView from './views/RecordsView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: blue[300],\n                    main: blue[500],\n                    dark: blue[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <HashRouter basename={'/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/records\" />\n                            <Route exact path=\"/records/:date?\" component={RecordsView} />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/demo\" component={DemoView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}