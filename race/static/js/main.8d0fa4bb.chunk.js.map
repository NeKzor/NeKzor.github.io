{"version":3,"sources":["chart-race-react/src/Bar.js","chart-race-react/src/BarChart.js","chart-race-react/src/index.js","App.js","index.js"],"names":["classes","bar","position","container","width","display","Bar","props","barDefaultStyle","transition","timeout","prevStyle","posDefaultStyle","marginTop","barTransitionStyles","entering","entered","currStyle","exiting","posTransitionStyles","style","Transition","in","state","Fragment","label","textBoxStyle","value","barChart","BarChart","componentDidMount","start","intervalId","setInterval","update","delay","setState","componentWillUnmount","clearInterval","idx","timeline","length","prevState","sortAxis","currRank","maxVal","prevRank","i","descending","minValue","undefined","toSort","Object","keys","data","map","name","val","sort","left","right","filter","x","slice","maxItems","Math","max","apply","item","reduce","ret","getInfoFromRank","currIdx","prevIdx","barStyle","barHeight","backgroundColor","colors","height","nItmes","barChartStyle","initRank","started","nextProps","this","timelineStyle","hidden","key","labels","React","Component","len","res","random","textAlign","paddingRight","time","Array","fill","itm","moment","add","format","App","fontFamily","justifyContent","fontSize","color","marginBottom","borderRadius","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d0fa4bb.chunk.js","sourcesContent":["import React from 'react';\nimport { Transition } from 'react-transition-group'\n\nconst classes = {\n    bar: {\n        position: \"relative\",\n    },\n    container: {\n        width: \"100%\",\n        display: \"flex\",\n        position: \"absolute\",\n    }\n}\n\nfunction Bar(props) {\n    const barDefaultStyle = {\n        transition: `all ${props.timeout}ms ease-in-out`,\n        ...props.prevStyle,\n      };\n      const posDefaultStyle = {\n        transition: `all ${props.timeout}ms ease-in-out`,\n        marginTop: props.prevStyle.marginTop,\n      }\n      const barTransitionStyles = {\n          entering: props.prevStyle,\n          entered:  props.currStyle,\n          exiting: props.currStyle,\n      };\n      const posTransitionStyles = {\n          entering: {marginTop: props.prevStyle.marginTop},\n          entered: {marginTop: props.currStyle.marginTop},\n          exiting: {marginTop: props.currStyle.marginTop},\n      }\n      return (\n          <div style={classes.container}>\n            <Transition in={true} timeout={props.timeout}>\n                { \n                state => (\n                <React.Fragment>\n                <div style={{\n                    ...posDefaultStyle, \n                    ...posTransitionStyles[state],\n                    width: `${props.width[0]}%`\n                }}>\n                    {props.label}\n                </div>\n                <div style={{width: `${props.width[1]}%`}}>\n                    <div\n                        style={{\n                            ...classes.bar, \n                            ...barDefaultStyle, \n                            ...barTransitionStyles[state]}} \n                    />\n                </div>\n                <div style={{\n                    ...posDefaultStyle, \n                    ...posTransitionStyles[state],\n                    width: `${props.width[2]}%`\n                }}>\n                    <div style={{...props.textBoxStyle}}>\n                        {props.value}\n                    </div>\n                </div>\n                </React.Fragment>)\n                }\n            </Transition>\n          </div>\n        );\n}\n\nexport default Bar;","import React from 'react';\nimport Bar from './Bar';\n\nconst classes = {\n  barChart: {\n    width: \"100%\",\n    position: \"relative\",\n  },\n  container: {\n    width: \"100%\",\n  }\n}\nclass BarChart extends React.Component {\n    constructor(props){\n        super(props);\n        this.barHeight = `calc(${props.barStyle.height} + ${props.barStyle.marginTop})`;\n        this.nItmes = Object.keys(this.props.data).length;\n        this.maxItems = props.maxItems <= this.nItmes ? props.maxItems : this.nItmes;\n        this.barChartStyle = {\n            height: `calc(${this.maxItems} * ${this.barHeight})`,\n        };\n        let [initRank, maxVal] = this.sortAxis(0);\n        this.state = {\n            idx: 0,\n            prevRank: initRank,\n            currRank: initRank,\n            maxVal: maxVal,\n            started: props.start\n        };\n    }\n  \n    componentDidMount = () => {\n      if(this.props.start){\n        var intervalId = setInterval(this.update, this.props.timeout + this.props.delay);\n        this.setState({intervalId: intervalId});\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.start) {\n        var intervalId = setInterval(this.update, this.props.timeout + this.props.delay);\n        this.setState({intervalId: intervalId});\n      }\n    }\n\n    componentWillUnmount = () => {\n      clearInterval(this.state.intervalId);\n    }\n  \n    update = () => {\n      if(this.state.idx + 1 === this.props.timeline.length) {\n        clearInterval(this.state.intervalId);\n        return;\n      }\n      this.setState(prevState => {\n            let [currRank, maxVal] = this.sortAxis(prevState.idx + 1);\n            return {\n                idx: prevState.idx + 1,\n                prevRank: prevState.currRank,\n                currRank: currRank,\n                maxVal: maxVal,\n            }\n        });\n    }\n\n    sortAxis = (i, descending, minValue = 1) => {\n        if(descending === undefined) descending = true;\n        if(minValue === undefined) minValue = 0;\n        let toSort = Object.keys(this.props.data).map(name => {\n            return {\n                name: name, \n                val: this.props.data[name][i]\n            };\n        });\n        toSort.sort((left, right) => descending ? right.val - left.val : left.val - right.val);\n        toSort = toSort.filter(x => x.val >= minValue).slice(0, this.maxItems);\n        const maxVal = Math.max.apply(Math, toSort.map(item => item.val));\n        return [toSort.reduce((ret, item, idx) => ({\n          ...ret, ...{[item.name]: idx}\n        }), {}), maxVal];\n    }\n\n    getInfoFromRank = name => {\n      const currIdx = this.state.idx;\n      const prevIdx = (currIdx > 0 ? currIdx - 1 : 0);\n      const value = this.props.data[name][currIdx];\n      const hidden = (this.state.currRank[name] === undefined);\n      const currStyle = {\n        ...this.props.barStyle,\n        marginTop: `calc(${this.state.currRank[name]} * ${this.barHeight})`,\n        width: `${100 * this.props.data[name][currIdx]/ this.state.maxVal}%`,\n        backgroundColor: this.props.colors[name],\n      };\n      const prevStyle = {\n        ...this.props.barStyle,\n        marginTop: `calc(${this.state.prevRank[name]} * ${this.barHeight})`,\n        width: `${100 * this.props.data[name][prevIdx]/ this.state.maxVal}%`,\n        backgroundColor: this.props.colors[name],\n      };\n      return [value, hidden, currStyle, prevStyle];\n    }\n  \n    render(){\n      return (\n        <div style={classes.container}>\n          <div style={this.props.timelineStyle}>\n            {this.props.timeline[this.state.idx]}\n          </div>\n          <div style={{...classes.barChart, ...this.barChartStyle}}>\n            {\n              Object.keys(this.props.data).map(name => {\n                const [value, hidden, currStyle, prevStyle] = this.getInfoFromRank(name);\n                if(hidden) return (<React.Fragment key={name}></React.Fragment>);\n                return (\n                    <Bar\n                      name={name}\n                      value={value}\n                      label={this.props.labels[name]}\n                      currStyle={currStyle}\n                      prevStyle={prevStyle}\n                      key={name}\n                      timeout={this.props.timeout}\n                      textBoxStyle={this.props.textBoxStyle}\n                      width={this.props.width}\n                    />\n                )\n              })\n            }\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default BarChart;","import BarChart from './BarChart';\nexport default BarChart;","import React from 'react';\nimport moment from 'moment';\nimport BarChart from './chart-race-react/src';\nimport overall from './data/overall.json';\n\nconst data = overall.data;\n\nconst randomColor = () => `rgb(${255 * Math.random()}, ${255 * Math.random()}, ${255 * Math.random()})`;\n\nconst len = data[Object.keys(data)[0]].length;\nconst keys = Object.keys(data);\nconst colors = keys.reduce(\n  (res, item) => ({\n    ...res,\n    ...{ [item]: randomColor() }\n  }),\n  {}\n);\n\nconst labels = keys.reduce((res, item) => {\n  return {\n    ...res,\n    ...{\n      [item]: (\n        <div style={{ textAlign: 'right', paddingRight: '50px' }}>\n          <div>{item}</div>\n        </div>\n      )\n    }\n  };\n}, {});\n\nconst time = Array(len)\n  .fill(0)\n  .map((itm, idx) =>\n    moment('2012-03-22')\n      .add(idx, 'days')\n      .format('YYYY-MM-DD')\n  );\n\nconst App = () => {\n    return (\n      <div style={{ width: '100%', height: '100%', fontFamily: 'Open Sans', display: 'flex', justifyContent: 'center'}}>\n        <BarChart\n          start={true}\n          data={data}\n          timeline={time}\n          labels={labels}\n          colors={colors}\n          len={len}\n          timeout={50}\n          delay={1}\n          timelineStyle={{\n            textAlign: 'center',\n            fontSize: '50px',\n            color: 'rgb(148, 148, 148)',\n            marginBottom: '100px',\n          }}\n          textBoxStyle={{\n            textAlign: 'center',\n            color: 'rgb(133, 131, 131)',\n            fontSize: '30px',\n          }}\n          barStyle={{\n            height: '60px',\n            marginTop: '10px',\n            borderRadius: '10px',\n          }}\n          width={[20, 75, 30]}\n        />\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}